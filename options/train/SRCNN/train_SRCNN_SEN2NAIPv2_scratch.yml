# general settings
name: train_SRCNN_x4_blabla_SEN2NAIPv2_500k_B16G1_wandb
model_type: SRModel
scale: 4
num_gpu: 0
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: Sen2NAIPv2_cross_sensor_train
    type: TacoSplitDataset
    taco_paths: "datasets/SEN2NAIPv2/sen2naipv2-crosssensor.taco"
    split_percent: [0.9, 0.09, 0.01]
    phase: "train"
    scale: 4
    gt_size: 512
    use_hflip: true
    use_rot: true

    # data loader
    num_worker_per_gpu: 6
    batch_size_per_gpu: 20
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: Sen2NAIPv2_cross_sensor_val
    type: TacoSplitDataset
    taco_paths: "/mnt/code/deep_learning/BasicSR/datasets/SEN2NAIPv2/sen2naipv2-crosssensor.taco"
    split_percent: [0.9, 0.09, 0.01]
    phase: "val"
    scale: 4
    gt_size: 512
    use_hflip: true
    use_rot: true

# network structures
network_g:
  type: SRCNN
  num_in_ch: 4
  num_out_ch: 4
  upscale: 4

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [100000, 200000, 300000, 400000]
    gamma: 0.5

  total_iter: 500000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

# validation settings
val:
  val_freq: !!float 5e3
  save_img: true

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: false
      better: higher
    ssim:
      type: calculate_ssim
      crop_border: 4
      test_y_channel: false
      better: higher
    niqe:
      type: calculate_niqe
      crop_border: 4
      better: lower

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
#dist_params:
#  backend: nccl
#  port: 29500
